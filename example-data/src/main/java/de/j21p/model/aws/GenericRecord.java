package de.j21p.model.aws;

import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;

import java.time.Instant;
import java.util.Objects;

@DynamoDbBean
public class GenericRecord {

  private String typname;
  private Instant updatedAt;
  private Instant createdAt;

  @DynamoDbAttribute("__typename")
  public String getTypname() {
    return this.typname;
  }

  public void setTypname(String typname) {
    this.typname = typname;
  }

  @DynamoDbAutoGeneratedTimestampAttribute
  public Instant getUpdatedAt() {
    //    if (this.updatedAt == null) setUpdatedAt(Instant.now());
    return this.updatedAt;
  }

  public void setUpdatedAt(Instant updatedAt) {
    this.updatedAt = updatedAt;
  }

  @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS)
  @DynamoDbAutoGeneratedTimestampAttribute
  public Instant getCreatedAt() {
    //    if (this.createdAt == null) setCreatedAt(Instant.now());
    return this.createdAt;
  }

  public void setCreatedAt(Instant createdAt) {
    this.createdAt = createdAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (!(o instanceof GenericRecord)) return false;
    GenericRecord that = (GenericRecord) o;
    return Objects.equals(getTypname(), that.getTypname())
        && Objects.equals(getUpdatedAt(), that.getUpdatedAt())
        && Objects.equals(getCreatedAt(), that.getCreatedAt());
  }

  @Override
  public int hashCode() {
    return Objects.hash(getTypname(), getUpdatedAt(), getCreatedAt());
  }

  @Override
  public String toString() {
    final StringBuilder sb = new StringBuilder("GenericRecord{");
    sb.append("typname='").append(typname).append('\'');
    sb.append(", updatedAt=").append(updatedAt);
    sb.append(", createdAt=").append(createdAt);
    sb.append('}');
    return sb.toString();
  }
}
